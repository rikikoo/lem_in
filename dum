

            ---(4)
           /    |
      ---(3)    |
     /          |
   (s)---(1)---(2)---(t)
          |          /
          |    (6)---
          |    /
         (5)---


	C	rC	P

    0	1	s-1
    0	1	s-3
    0	1	1-5
    0	0	1-2
    0	1	3-4
    0	1	5-6
    0	1	4-2
    0	1	2-t
    0	1	6-t


f = (lem.ants / path_count) + path.len
9 ants
    	2   	4   	6   	8       |__len__|___f___|
!u	x | x | x |   |   |   |   |   |		|   3	|  12	|
   	  |   |   |   |   |   |   |   |		|-------|-------|
u0	x | x | x | x |   |   |   |   |		|   4	|  13	|
u1	x | x | x | x | x |   |   |   |		|   5	|  10	|
u2	x | x | x | x | x | x | x | x |		|   8	|  11	|


int turn = 1;
int ants_highest = 0;
int *limit = malloc(sizeof(int) * ants);

while (route->i <= max_flow) {
    if (route->i == max_flow) {
        route->ants -= ants_highest;
        ants_highest += route->ants;
        while (route->ants) {
            limit[turn - 1] = lem->max_flow * turn - ants_highest;
            turn++;
            route->ants--;
        }
        route = head;
        max_flow--;
    }
    else
        route = route->next;
}

routeA_ants: 5
routeB_ants: 3
routeC_ants: 2
routeD_ants: 2


trn 1   2   3   4   5   6   7
lim 4   8   10  11  12  12  12
    •-->•-->•-->•-->•-->•-->•
    •-->•-->•-->•-->•-->•
    •-->•-->•-->•-->•
    •-->•-->•-->•

    •-->•-->•-->•-->•-->•-->•
    •-->•-->•-->•-->•-->•
    •-->•-->•-->•-->•
    •-->•-->•-->•

    •-->•-->•-->•-->•-->•-->•
    •-->•-->•-->•-->•-->•
    X
    X

    •-->•-->•-->•-->•-->•-->•
    X
    X
    X

    •-->•-->•-->•-->•-->•-->•
    X
    X
    X


turn = 1;
shortest_path_ants = 5;
while (turn <= shortest_path->ants) {
    while (route->i <= max_flow) {
        if (route->ants) {
            route->ants--;
            i++;
        }
        route = route->next;
    }
    if (i > 0)
        limit[turn - 1] = i;
    if (limit[turn - 1] > lem->ants)
        limit[turn - 1] = lem->ants;
    turn++;
    route = head;
}


ants=9
plen=4
llen=5
np=1

1. diff    = llen-plen       = 5-4     = 1
2. pants   = diff>ants ? ants : diff   = 1
3. tants   = (ants-pants)/np = (9-1)/1 = 8
4. cost    = plen+tants      = 4+5     = 9
5. maxcost = max(cost)       = 13      = 13

        1
      / |
     2  4--5
     |  |  |
     3--6  7
        | /
        8

combos:
8 6 4 1

8 7 5 4 1
8 6 3 2 1
